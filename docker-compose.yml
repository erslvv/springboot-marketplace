services:
    postgres:
        image: postgres:16
        container_name: mp-postgres
        ports:
            - "5432:5432"
        environment:
            POSTGRES_DB: ${POSTGRES_DB}
            POSTGRES_USER: ${POSTGRES_USER}
            POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        volumes:
            - pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
            interval: 5s
            timeout: 5s
            retries: 10

    app:
        build: .
        depends_on: [ postgres ]
        ports: [ "8080:8080" ]
        environment:
            SPRING_PROFILES_ACTIVE: docker
            SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/${POSTGRES_DB}
            SPRING_DATASOURCE_USERNAME: ${POSTGRES_USER}
            SPRING_DATASOURCE_PASSWORD: ${POSTGRES_PASSWORD}
        working_dir: /app         # где лежит pom.xml внутри образа
        command: ["mvn","spring-boot:run","-Dspring-boot.run.profiles=docker"]
    pgadmin:
        image: dpage/pgadmin4:8
        container_name: mp-pgadmin
        depends_on:
            postgres:
                condition: service_healthy
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
        profiles: ["pgadmin"]

volumes:
    pgdata:
